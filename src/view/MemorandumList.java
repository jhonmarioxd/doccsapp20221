//u20212200570 Jhon Mairo Vanegas Olaya
//u20212199873 Julian David Ordo√±ez Martinez
package view;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Memorandum;
import persistence.MemorandumDAOImp;
/**
 *
 * @author Mario
 */
public class MemorandumList extends javax.swing.JFrame {
 ArrayList<Memorandum> listMemorandum = new ArrayList();
    DefaultTableModel dtmMemorandum = new DefaultTableModel();

    public MemorandumList() {
        initComponents();
        this.setLocationRelativeTo(null);
        setModelo();
    }

    public void setModelo() {
        String[] header = {"Date", "Addressee", "Theme", "Message", "Signing"};
        dtmMemorandum.setColumnIdentifiers(header);
        MemorandumTbl.setModel(dtmMemorandum);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        MemorandumModeLbl = new javax.swing.JLabel();
        MemorandumDataBtn = new javax.swing.JButton();
        MemorandumDeleteBtn = new javax.swing.JButton();
        MemorandumUpdateBtn = new javax.swing.JButton();
        MemorandumCloseBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MemorandumTbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Memorandum");

        MemorandumModeLbl.setText("List Mode");

        MemorandumDataBtn.setText("Data");
        MemorandumDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemorandumDataBtnActionPerformed(evt);
            }
        });

        MemorandumDeleteBtn.setText("Delete");
        MemorandumDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemorandumDeleteBtnActionPerformed(evt);
            }
        });

        MemorandumUpdateBtn.setText("Update");

        MemorandumCloseBtn.setText("Close");
        MemorandumCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemorandumCloseBtnActionPerformed(evt);
            }
        });

        MemorandumTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        MemorandumTbl.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(MemorandumTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(MemorandumCloseBtn)
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MemorandumUpdateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addComponent(MemorandumDeleteBtn)
                        .addGap(51, 51, 51))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MemorandumDataBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(MemorandumModeLbl)))
                        .addContainerGap(212, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MemorandumModeLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MemorandumDataBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 291, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MemorandumDeleteBtn)
                    .addComponent(MemorandumUpdateBtn)
                    .addComponent(MemorandumCloseBtn))
                .addGap(25, 25, 25))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>                        

    private void MemorandumDataBtnActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        MemorandumDAOImp memorandumDAOImp = new MemorandumDAOImp();
        //Se traen los datos de la BD
        try {
            listMemorandum = (ArrayList<Memorandum>) memorandumDAOImp.listMemorandum();
            Object[] data = new Object[dtmMemorandum.getColumnCount()];
            int i = 1;
            dtmMemorandum.setRowCount(0);
            for (Memorandum memorandum : listMemorandum) {
                data[0] = memorandum.getDate();
                data[1] = memorandum.getaddressee();
                data[2] = memorandum.getTheme();
                data[3] = memorandum.getmessage();
                data[4] = memorandum.getsigning();
                i++;
                dtmMemorandum.addRow(data);
            }
            MemorandumTbl.setModel(dtmMemorandum);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }                                                 

    private void MemorandumDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        int index = MemorandumTbl.getSelectedRow();
        Memorandum memorandum = listMemorandum.get(index);
        //JOptionPane.showMessageDialog(null, client.getId());
        MemorandumDAOImp memorandumDAOImp = new MemorandumDAOImp();
        int rta = JOptionPane.showConfirmDialog(null, "Do you want to delete the record?",
            "Remove Memorandum Registry", JOptionPane.OK_CANCEL_OPTION,
            JOptionPane.INFORMATION_MESSAGE);
        if (rta == 0) {
            try {
                memorandumDAOImp.deleteMemorandum(memorandum);
                JOptionPane.showMessageDialog(null, "Deleted Memorandum Record");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Operation Not Performed");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Operation Not Performed");
        }
        if (dtmMemorandum.getRowCount() > 0) {
            for (int i = dtmMemorandum.getRowCount() - 1; i > -1; i--) {
                dtmMemorandum.removeRow(i);
            }
            try {
                var Memorandum = memorandumDAOImp.listMemorandum();
                Object[] data = new Object[dtmMemorandum.getColumnCount()];
                int i = 1;
                dtmMemorandum.setRowCount(0);
                for (Memorandum c : Memorandum) {
                    data[0] = c.getDate();
                    data[1] = c.getaddressee();
                    data[2] = c.getTheme();
                    data[3] = c.getmessage();
                    data[4] = c.getsigning();
                    i++;
                    dtmMemorandum.addRow(data);
                }
                MemorandumTbl.setModel(dtmMemorandum);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }                                                   

    private void MemorandumCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        System.exit(0);
    }                                                  

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemorandumList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemorandumList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemorandumList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemorandumList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemorandumList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton MemorandumCloseBtn;
    private javax.swing.JButton MemorandumDataBtn;
    private javax.swing.JButton MemorandumDeleteBtn;
    private javax.swing.JLabel MemorandumModeLbl;
    private javax.swing.JTable MemorandumTbl;
    private javax.swing.JButton MemorandumUpdateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   


}
